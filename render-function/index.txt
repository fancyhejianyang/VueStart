Render函数
js模板创建HTML(基本写法)
<script type="text/x-template" id="template">
	html...
</script>
demo render-1

demo render-2 主要关注点是假如都是显示子组件的阵列，场景比较特殊createElement参数 用于生成模板
语法：
Vue.component('component-name',{
	render:function(createElement){
		return createElement(//)
	}
});
{String|Object|Function}
html标签字符串或者返回值是string类型/Object的函数，必要属性；
｛Object｝
一个包含模板相关属性的数据对象，template中可以使用的属性，可选；
｛String|Array｝
官方注解：
子节点（VNodes）由createElement（）构建而成，或者简单的使用字符串来生成“文本节点”，可选，写法如下：
[
	'先写一些文字',
	createElement('h1','一则头条'),
	createElement(MyComponent,{
		props:{
			someProp:'foobar'
		}
	})
]

render-3
深入data object参数
render demo-4
主要围绕data object 进行演示
完整属性：https://cn.vuejs.org/v2/guide/render-function.html#基础

约束
VNodes必须唯一
不合法演示：
return createElement('div',[ myParagraphVNode,myParagraphVNode    ]) 虽然也能展示多组元素，但是违背了框架准则
推荐工厂函数方式
Array.apply(null,{length:100}).map(function(){return //元素})

使用javascript 代替模板功能
v-if v-for v-model
render-function
事件 & 按键修饰符
传送门：http://www.cnblogs.com/meiyh/p/6593462.html
如 事件捕获对应前缀是 ！ 则使用写法：on:{ '!click':function(){}}
其他的修饰符直接在事件处理函数中使用 event.stopPropagation()

$slots
从this.$slots中获取VNodes列表中的静态内容
this.$scopedSlots 中获得能用作函数的作用域插槽 官方说的比较紧凑，具体还是对照demo
render-slots

JSX
